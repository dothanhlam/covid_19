<div class="card">
    <h5 class="card-header"><%=country.country%></h5>
    <div class="card-body">
        <ul class="nav">
            <li class="nav-item">
                <a class="nav-link" href="#">Cases <span class="badge badge-primary"><%= country.cases%></span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Deaths <span class="badge badge-danger"><%= country.deaths%></span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Critical <span
                        class="badge badge-warning"><%= country.critical%></span></a>
            </li>

            <li class="nav-item">
                <a class="nav-link" href="#">Recovered <span
                        class="badge badge-success"><%= country.recovered%></span></a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#">Active <span class="badge badge-info"><%= country.active%></span></a>
            </li>
        </ul>
        <canvas id= "<%= country.countryInfo._id %>"> no data avaialble </canvas>
    </div>
</div>
<script>
    
    var _labels = [];
    var _cases = [];
    var _deaths = [];
    var _recovered = [];

    var _ranges = 30;
    for (let i = 1; i <= _ranges; i++) {
        let lastDay = new Date(Date.now() - i * 24 * 60 * 60 * 1000);
        let l = `${lastDay.getMonth() + 1}/${lastDay.getDate()}/${lastDay.getFullYear() - 2000}`;
        
        _labels.push(l);
        var cases = JSON.parse('<%- timeline ? JSON.stringify(timeline.timeline.cases) : {} %>');
        var deaths = JSON.parse('<%- timeline ? JSON.stringify(timeline.timeline.deaths) : {} %>');
        var recovered = JSON.parse('<%- timeline ? JSON.stringify(timeline.timeline.recovered) : {} %>');

       if (cases && cases[l]) {
            _cases.push(cases[l])
        }
        else {
            _cases.push(0)
        }

        if (deaths && deaths[l]) {
            _deaths.push(deaths[l])
        }
        else {
            _deaths.push(0)
        }

        if (recovered && recovered[l]) {
            _recovered.push(recovered[l])
        }
        else {
            _recovered.push(0)
        }
    }

    var colors = ['#007bff', '#ff6384', '#333333', '#c3e6cb', '#dc3545', '#6c757d'];
    var color = Chart.helpers.color;

    var chartData = {
        labels: _labels.reverse(),
        datasets: [{
            data: _cases.reverse(),
            label: 'Cases',
            borderColor: colors[0],
            borderWidth: 2,
            pointBackgroundColor: colors[0],
            backgroundColor: color(colors[0]).alpha(0.2).rgbString(),
        },
        {
            data: _deaths.reverse(),
            label: 'Deaths',
            borderColor: colors[1],
            borderWidth: 2,
            pointBackgroundColor: colors[1],
            backgroundColor: color(colors[1]).alpha(0.2).rgbString(),
        },

        {
            data: _recovered.reverse(),
            label: 'Recovered',
            borderColor: colors[3],
            borderWidth: 2,
            pointBackgroundColor: colors[3],
            backgroundColor: color(colors[3]).alpha(0.2).rgbString(),
        }]

    };

    var chLine = document.getElementById('<%= country.countryInfo._id%>');
    if (chLine) {
        new Chart(chLine, {
            type: 'line',
            data: chartData,
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                },
                legend: {
                    display: true
                }
            }
        });
    }
</script>